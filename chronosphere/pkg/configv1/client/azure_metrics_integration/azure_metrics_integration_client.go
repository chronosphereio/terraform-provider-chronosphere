// Code generated by go-swagger; DO NOT EDIT.

package azure_metrics_integration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new azure metrics integration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for azure metrics integration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateAzureMetricsIntegration(params *CreateAzureMetricsIntegrationParams, opts ...ClientOption) (*CreateAzureMetricsIntegrationOK, error)

	DeleteAzureMetricsIntegration(params *DeleteAzureMetricsIntegrationParams, opts ...ClientOption) (*DeleteAzureMetricsIntegrationOK, error)

	ListAzureMetricsIntegrations(params *ListAzureMetricsIntegrationsParams, opts ...ClientOption) (*ListAzureMetricsIntegrationsOK, error)

	ReadAzureMetricsIntegration(params *ReadAzureMetricsIntegrationParams, opts ...ClientOption) (*ReadAzureMetricsIntegrationOK, error)

	UpdateAzureMetricsIntegration(params *UpdateAzureMetricsIntegrationParams, opts ...ClientOption) (*UpdateAzureMetricsIntegrationOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateAzureMetricsIntegration create azure metrics integration API
*/
func (a *Client) CreateAzureMetricsIntegration(params *CreateAzureMetricsIntegrationParams, opts ...ClientOption) (*CreateAzureMetricsIntegrationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAzureMetricsIntegrationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateAzureMetricsIntegration",
		Method:             "POST",
		PathPattern:        "/api/v1/config/azure-metrics-integrations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateAzureMetricsIntegrationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateAzureMetricsIntegrationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*CreateAzureMetricsIntegrationDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
DeleteAzureMetricsIntegration delete azure metrics integration API
*/
func (a *Client) DeleteAzureMetricsIntegration(params *DeleteAzureMetricsIntegrationParams, opts ...ClientOption) (*DeleteAzureMetricsIntegrationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAzureMetricsIntegrationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteAzureMetricsIntegration",
		Method:             "DELETE",
		PathPattern:        "/api/v1/config/azure-metrics-integrations/{slug}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAzureMetricsIntegrationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAzureMetricsIntegrationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteAzureMetricsIntegrationDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ListAzureMetricsIntegrations list azure metrics integrations API
*/
func (a *Client) ListAzureMetricsIntegrations(params *ListAzureMetricsIntegrationsParams, opts ...ClientOption) (*ListAzureMetricsIntegrationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAzureMetricsIntegrationsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ListAzureMetricsIntegrations",
		Method:             "GET",
		PathPattern:        "/api/v1/config/azure-metrics-integrations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAzureMetricsIntegrationsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAzureMetricsIntegrationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ListAzureMetricsIntegrationsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ReadAzureMetricsIntegration read azure metrics integration API
*/
func (a *Client) ReadAzureMetricsIntegration(params *ReadAzureMetricsIntegrationParams, opts ...ClientOption) (*ReadAzureMetricsIntegrationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAzureMetricsIntegrationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "ReadAzureMetricsIntegration",
		Method:             "GET",
		PathPattern:        "/api/v1/config/azure-metrics-integrations/{slug}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAzureMetricsIntegrationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAzureMetricsIntegrationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ReadAzureMetricsIntegrationDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
UpdateAzureMetricsIntegration update azure metrics integration API
*/
func (a *Client) UpdateAzureMetricsIntegration(params *UpdateAzureMetricsIntegrationParams, opts ...ClientOption) (*UpdateAzureMetricsIntegrationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateAzureMetricsIntegrationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateAzureMetricsIntegration",
		Method:             "PUT",
		PathPattern:        "/api/v1/config/azure-metrics-integrations/{slug}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateAzureMetricsIntegrationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateAzureMetricsIntegrationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*UpdateAzureMetricsIntegrationDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
