// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConfigunstableLogControlRuleType configunstable log control rule type
//
// swagger:model configunstableLogControlRuleType
type ConfigunstableLogControlRuleType string

func NewConfigunstableLogControlRuleType(value ConfigunstableLogControlRuleType) *ConfigunstableLogControlRuleType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConfigunstableLogControlRuleType.
func (m ConfigunstableLogControlRuleType) Pointer() *ConfigunstableLogControlRuleType {
	return &m
}

const (

	// ConfigunstableLogControlRuleTypeDROP captures enum value "DROP"
	ConfigunstableLogControlRuleTypeDROP ConfigunstableLogControlRuleType = "DROP"

	// ConfigunstableLogControlRuleTypeSAMPLE captures enum value "SAMPLE"
	ConfigunstableLogControlRuleTypeSAMPLE ConfigunstableLogControlRuleType = "SAMPLE"

	// ConfigunstableLogControlRuleTypeDROPFIELD captures enum value "DROP_FIELD"
	ConfigunstableLogControlRuleTypeDROPFIELD ConfigunstableLogControlRuleType = "DROP_FIELD"
)

// for schema
var configunstableLogControlRuleTypeEnum []interface{}

func init() {
	var res []ConfigunstableLogControlRuleType
	if err := json.Unmarshal([]byte(`["DROP","SAMPLE","DROP_FIELD"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		configunstableLogControlRuleTypeEnum = append(configunstableLogControlRuleTypeEnum, v)
	}
}

func (m ConfigunstableLogControlRuleType) validateConfigunstableLogControlRuleTypeEnum(path, location string, value ConfigunstableLogControlRuleType) error {
	if err := validate.EnumCase(path, location, value, configunstableLogControlRuleTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this configunstable log control rule type
func (m ConfigunstableLogControlRuleType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConfigunstableLogControlRuleTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this configunstable log control rule type based on context it is used
func (m ConfigunstableLogControlRuleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
